version: "3.4"

networks:
 docker-net:
  name: docker-net
  driver: bridge
  ipam:
    config:
      - subnet: 172.1.1.0/24

services:

  postgres:
    image: postgres:11-alpine
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.10
    environment:
      TZ: ${TZ}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 3s
      retries: 5
    volumes:
      - ./docker-disks/postgres-data:/var/lib/postgresql/data
      - ./create_kong_db.sql:/docker-entrypoint-initdb.d/create_kong_db.sql

  kong-prepare:
    image: kong:2.8.3-alpine
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - docker-net
    environment:
      TZ: ${TZ}
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: password
    links:
      - postgres
    depends_on:
      - postgres

  kong:
    image: kong:2.8.3-alpine
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.11
    environment:
      TZ: ${TZ}
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: password
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_DB_UPDATE_FREQUENCY: 1m
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    depends_on:
      - kong-prepare
    ports:
      - "8001:8001"
      - "8444:8444"
      - "8000:8000"
      - "8443:8443"

  konga-prepare:
    image: pantsel/konga:0.14.9
    command: "-c prepare -a postgres -u postgresql://postgres:password@postgres:5432/konga_db"
    restart: on-failure
    networks:
      - docker-net
    environment:
      TZ: ${TZ}
    links:
      - postgres
    depends_on:
      - postgres

  konga:
    image: pantsel/konga:0.14.9
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.12
    environment:
      TZ: ${TZ}
      DB_ADAPTER: postgres
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: password
      DB_DATABASE: konga_db
      TOKEN_SECRET: iu7YDcPLiZkozQXzZ9kka3Ee1Vid5ZgQ
      NODE_ENV: development
    depends_on:
      - konga-prepare
    ports:
      - "1337:1337"
      
  service_a:
    image: nginx:latest
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.14
    environment:
      TZ: ${TZ}
    ports:
      - 9001:9001
    volumes:
      - ./service_a.nginx.conf:/etc/nginx/nginx.conf

  service_b_1:
    image: nginx:latest
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.15
    environment:
      TZ: ${TZ}
    ports:
      - 9002:9002
    volumes:
      - ./service_b_1.nginx.conf:/etc/nginx/nginx.conf

  service_b_2:
    image: nginx:latest
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.16
    environment:
      TZ: ${TZ}
    ports:
      - 9003:9003
    volumes:
      - ./service_b_2.nginx.conf:/etc/nginx/nginx.conf

  service_b_3:
    image: nginx:latest
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.17
    environment:
      TZ: ${TZ}
    ports:
      - 9004:9004
    volumes:
      - ./service_b_3.nginx.conf:/etc/nginx/nginx.conf

  service_c:
    image: nginx:latest
    restart: unless-stopped
    networks:
      docker-net:
        ipv4_address: 172.1.1.18
    environment:
      TZ: ${TZ}
    ports:
      - 9005:9005
    volumes:
      - ./service_c.nginx.conf:/etc/nginx/nginx.conf
